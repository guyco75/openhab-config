
rule "AC System Start"
  when
    System started
  then
    postUpdate(ac_mode, 1);
    postUpdate(ac_temp, 25);
    postUpdate(ac_fan, 3);
end

rule "AC Poll Temp Humid"
  when
    Time cron "0 * * ? * *"
  then
    //logInfo("Air Conditioner", "send temp/humid query");
    sendCommand(Arduino, "$1,#");
end

rule "AC Arduino message"
  when
    Item Arduino received update
  then
    logInfo("Air Conditioner", Arduino.state.toString)
    // TODO: parse string and verify correct format...

    var String msg = Arduino.state.toString;
    var String json = transform("REGEX", "^[\\$]*\\$([^\\$#]*)#.*", msg); 
    while (json != null) {
      //logInfo("Air Conditioner", msg + " ---- " + json);
      var temp = transform("JSONPATH", "$.temperature", json);
      var humid = transform("JSONPATH", "$.humidity", json);
      if (temp != null && humid != null) {
        postUpdate(livingTemp01, temp);
        postUpdate(livingHum01, humid);
        if (ac_i_feel.state == ON) {
          // +0.5 for rounding
          // +0.4 faster response (might need -0.4 for heating?)
          var String arduino_cmd = "$2,0," + ac_mode.state + "," + ac_fan.state + ",1,1," + (Float::parseFloat(temp) + 0.5 + 0.4).intValue + ",#";
          logInfo("Air Conditioner", "AC action: " + arduino_cmd)
          sendCommand(Arduino, arduino_cmd);
        }
      }
      var st = transform("JSONPATH", "$.ac_state", json);
      if (st != null) {
        postUpdate(ac_state, st);
      }
      msg = transform("REGEX", "^[\\$]*\\$[^\\$#]*#(.*)", msg);
      json = transform("REGEX", "^[\\$]*\\$([^\\$#]*)#.*", msg); 
    }
end

rule "AC Air Conditioner update"
  when
    Item ac_power  received command or
    Item ac_mode   received update or
    Item ac_fan    received update or
    Item ac_i_feel changed or
    Item ac_temp   received update
  then
    var String arduino_cmd = "$2,";
   
    if (receivedCommand == ON) {
      arduino_cmd += "1,";
      ac_i_feel.state = OFF;
    } else {
      arduino_cmd += "0,";
    }
    arduino_cmd += ac_mode.state + "," + ac_fan.state + "," + "0" + ",";
    if (ac_i_feel.state == ON) {
        arduino_cmd += "1,";
    } else {
        arduino_cmd += "0,";
    }
    arduino_cmd += ac_temp.state + ",#";

    logInfo("Air Conditioner", "AC action: " + arduino_cmd)
    sendCommand(Arduino, arduino_cmd);
    //executeCommandLine(command);
end
